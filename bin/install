set -eu
export LC_ALL=C
export LANG=C
IFS="$(printf " \t\nx")"

XDG_CONFIG_HOME="${HOME}/.config"
ZDOTDIR="${XDG_CONFIG_HOME}/zsh"
ZSH_FUNCCOMP_DIR="${ZDOTDIR}/func_comp"
GHQ_ROOT="${HOME}/repo"
REPO_ROOT="${GHQ_ROOT}/github.com/diohabara/mac-dotfiles"
DOTFILES_HOME="${REPO_ROOT}/dotfiles"

command mkdir -p "${ZSH_FUNCCOMP_DIR}"

function command_exists() {
  type "$1" &> /dev/null ;
}

function installing() {
  echo "Installing $1..."
}

function installed() {
  echo "$1 is installed!"
}

function already() {
  echo "$1 is already installed"
}

: "install CLT" && {
  if ! command_exists xcode-select; then
    installing 'Command Line Tools'
    xcode-select --install
    installed 'Command Line Tools'
  else
    already 'Command Line Tools'
  fi
}

: "install brew" && {
  if ! command_exists brew; then
    installing 'brew'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    installed 'brew'
  else
    already 'brew'
  fi
}

: "install packages by brew" && {
  echo "Installing packages by brew..."
  brew bundle install --file "${REPO_ROOT}/.Brewfile"
  echo "Installed packages by brew!" 
}

: "install python packages" && {
  if ! command_exists poetry; then
    installing 'poetry'
    curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
    installed 'poetry'
  else
    already 'poetry'
  fi
}

: "install rust packages" && {
  if ! command_exists rustup; then
    installing 'Rust'
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path
    rustup completions zsh > "${ZSH_FUNCCOMP_DIR}/_rustup"
    # For rust-analyzer
    # Doc: https://rust-analyzer.github.io/manual.html#installation
    rustup component add rust-src
    installed 'Rust'
  else
    already 'Rust'
  fi
}

: "install haskell packages" && {
  if ! command_exists stack; then
    installing 'Haskell-Stack'
    curl -sSL https://get.haskellstack.org/ | sh -s - -f
    installed 'Haskell-Stack'
  else
    already 'Haskell-Stack'
  fi
}

echo "Complete instalation!"
